<?xml version="1.0" encoding="utf-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    
    xmlns:converters="clr-namespace:AndreasReitberger.Shared.Core.Converters;assembly=SharedMauiCoreLibrary"
    xmlns:icons="clr-namespace:AndreasReitberger.Shared.FontIcons"
    >
    <!--
    Important notes:
    - Always set the `Background` or `BackgroundColor` property before setting the `TextColor` property!
    - If using `BackgroundColor`. use the `Color...` converters, otherwise the `Brush...` converters
    -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Resources/Themes/SharedColors.xaml" />
        <ResourceDictionary Source="/Resources/Themes/SharedFontSizes.xaml" />
        <ResourceDictionary Source="/Resources/Themes/SharedFonts.xaml" />
        <ResourceDictionary Source="/Resources/Themes/SharedConverters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="Style.Core.Button.Default" TargetType="Button">
        <!-- Set Background before setting the TextColor due to the Converter 
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="TextColor" Value="{Binding Source={RelativeSource Self}, Path=Background, Converter={StaticResource BrushToBlackWhiteConverter}}" />
        -->
        <Setter Property="FontFamily" Value="{StaticResource MontserratSemiBold}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultTextSize}" />
        <Setter Property="MinimumHeightRequest" Value="50" />
        <Setter Property="BorderWidth" Value="0" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="PointerOver" >
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{DynamicResource PrimaryDarkenColor}"/>
                            <!--<Setter Property="Background" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray50}}"/>-->
                            <Setter Property="TextColor" Value="{Binding Source={RelativeSource Self}, Path=Background, Converter={StaticResource BrushToBlackWhiteConverter}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
                            <Setter Property="TextColor" Value="{Binding Source={RelativeSource Self}, Path=Background, Converter={StaticResource BrushToBlackWhiteConverter}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource DarkGray}}" />
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource DarkGray}, Dark={StaticResource LightGray}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <!--
                    <VisualState x:Name="Focused" />
                    <VisualState x:Name="Selected" />
                    -->
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    
    <Style TargetType="Button" BasedOn="{StaticResource Style.Core.Button.Default}"/>

    <Style x:Key="Style.Core.Button.Header" TargetType="Button" BasedOn="{StaticResource Style.Core.Button.Default}">
        <Setter Property="FontFamily" Value="{StaticResource MontserratSemiBold}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultTextSize}" />
        <Setter Property="MinimumHeightRequest" Value="50" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{DynamicResource PrimaryDarkenColor}"/>
                            <Setter Property="TextColor" Value="{Binding Source={RelativeSource Self}, Path=Background, Converter={StaticResource BrushToBlackWhiteConverter}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
                            <Setter Property="TextColor" Value="{Binding Source={RelativeSource Self}, Path=Background, Converter={StaticResource BrushToBlackWhiteConverter}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource DarkGray}}" />
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource DarkGray}, Dark={StaticResource LightGray}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    
    <Style x:Key="Style.Core.ImageButton.Default" TargetType="ImageButton">
        <Setter Property="BorderColor" Value="Transparent"/>
        <Setter Property="BorderWidth" Value="0"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="PointerOver" />
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="1" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.5" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="ImageButton" BasedOn="{StaticResource Style.Core.ImageButton.Default}"/>

    <Style x:Key="Style.Core.Button.Icon.MaterialDesign" TargetType="Button" BasedOn="{StaticResource Style.Core.Button.Default}">
        <Setter Property="FontFamily" Value="{StaticResource MaterialDesignIcons}" />
        <Setter Property="FontSize" Value="{StaticResource LargeIconSize}" />
        <!--
        <Setter Property="Background" Value="{StaticResource Transparent}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray400}}" />
        -->
        <Setter Property="HeightRequest" Value="{OnIdiom Desktop=60, Tablet=60, Default=50}" />
        <Setter Property="WidthRequest" Value="{OnIdiom Desktop=60, Tablet=60, Default=50}" />
        <Setter Property="BorderWidth" Value="0" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{StaticResource Transparent}" />
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray400}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{StaticResource Transparent}" />
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray400}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray700}}" />
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray800}, Dark={StaticResource Gray200}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <!--
                    <VisualState x:Name="Focused" />
                    <VisualState x:Name="Selected" />
                    -->
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="Style.Core.Button.IconSmall.MaterialDesign" TargetType="Button" BasedOn="{StaticResource Style.Core.Button.Icon.MaterialDesign}">
        <Setter Property="FontSize" Value="{StaticResource SmallTextSize}" />
        <Setter Property="HeightRequest" Value="{OnIdiom Desktop=48, Tablet=48, Default=40}" />
        <Setter Property="WidthRequest" Value="{OnIdiom Desktop=48, Tablet=48, Default=40}" />
    </Style>

    <Style x:Key="Style.Core.Button.IconPrimary.MaterialDesign" TargetType="Button" BasedOn="{StaticResource Style.Core.Button.Icon.MaterialDesign}">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="TextColor" Value="{Binding Source={RelativeSource Self}, Path=Background, Converter={StaticResource BrushToBlackWhiteConverter}}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{DynamicResource PrimaryDarkenColor}" />
                            <Setter Property="TextColor" Value="{Binding Source={RelativeSource Self}, Path=Background, Converter={StaticResource BrushToBlackWhiteConverter}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
                            <Setter Property="TextColor" Value="{Binding Source={RelativeSource Self}, Path=Background, Converter={StaticResource BrushToBlackWhiteConverter}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource DarkGray}}" />
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource DarkGray}, Dark={StaticResource LightGray}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="Style.Core.Button.Link" TargetType="Button" BasedOn="{StaticResource Style.Core.Button.Default}">
        <Setter Property="BorderWidth" Value="0" />
        <Setter Property="Margin" Value="4,6" />
        <Setter Property="FontSize" Value="{StaticResource DefaultTextSize}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="PointerOver" >
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{StaticResource Transparent}"/>
                            <Setter Property="TextColor" Value="{StaticResource LightBlue}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{StaticResource Transparent}"/>
                            <Setter Property="TextColor" Value="{StaticResource Blue}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource DarkGray}}" />
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource DarkGray}, Dark={StaticResource LightGray}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="Style.Core.Button.LinkRound" TargetType="Button" BasedOn="{StaticResource Style.Core.Button.Link}">
        <Setter Property="BorderWidth" Value="2" />
        <Setter Property="HeightRequest" Value="50" />
        <Setter Property="CornerRadius" Value="25" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="PointerOver" >
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{StaticResource Transparent}"/>
                            <Setter Property="TextColor" Value="{StaticResource LightBlue}" />
                            <Setter Property="BorderColor" Value="{StaticResource LightBlue}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{StaticResource Transparent}"/>
                            <Setter Property="TextColor" Value="{StaticResource Blue}" />
                            <Setter Property="BorderColor" Value="{StaticResource Blue}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource DarkGray}}" />
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource DarkGray}, Dark={StaticResource LightGray}}" />
                            <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource DarkGray}, Dark={StaticResource LightGray}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="Style.Core.Button.IconRound.MaterialDesign" BasedOn="{StaticResource Style.Core.Button.Icon.MaterialDesign}" TargetType="Button">
        <Setter Property="FontSize" Value="{StaticResource LargeTextSize}" />
        <Setter Property="BorderWidth" Value="1" />
        <Setter Property="HeightRequest" Value="{OnIdiom Desktop=64, Tablet=64, Default=50}" />
        <Setter Property="WidthRequest" Value="{OnIdiom Desktop=64, Tablet=64, Default=50}" />
        <Setter Property="CornerRadius" Value="{OnIdiom Desktop=32, Tablet=32, Default=25}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
                            <Setter Property="TextColor" Value="{Binding Source={RelativeSource Self}, Path=Background, Converter={StaticResource BrushToBlackWhiteConverter}}" />
                            <Setter Property="BorderColor" Value="{DynamicResource PrimaryDarkenColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{AppThemeBinding Light={StaticResource Gray100}, Dark={StaticResource Gray900}}" />
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray800}, Dark={StaticResource Gray200}}" />
                            <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray700}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray700}}" />
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray800}, Dark={StaticResource Gray200}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <!--
            <VisualState x:Name="Focused" />
            <VisualState x:Name="Selected" />
            -->
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="Style.Core.Button.IconRound.MaterialDesign.Transparent" TargetType="Button" BasedOn="{StaticResource Style.Core.Button.IconRound.MaterialDesign}">
        <Setter Property="BorderWidth" Value="0" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="Transparent" />
                            <!--<Setter Property="Background" Value="{DynamicResource PrimaryColor}" />-->
                            <Setter Property="TextColor" Value="{DynamicResource PrimaryColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray400}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray700}}" />
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray800}, Dark={StaticResource Gray200}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <!--
                    <VisualState x:Name="Focused" />
                    <VisualState x:Name="Selected" />
                    -->
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    
    <Style x:Key="Style.Core.Button.RoundedLong" TargetType="Button" BasedOn="{StaticResource Style.Core.Button.Default}">
        <Setter Property="FontFamily" Value="{StaticResource MontserratSemiBold}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultTextSize}" />
        <Setter Property="Margin" Value="20" />
        <Setter Property="FontAttributes" Value="Bold" />
        <Setter Property="HeightRequest" Value="{OnIdiom Desktop=60, Tablet=60, Default=50}" />
        <Setter Property="CornerRadius" Value="{OnIdiom Desktop=30, Tablet=30, Default=20}" />
        <Setter Property="WidthRequest" Value="{OnIdiom Desktop=350, Tablet=300, Phone=250, Default=250}" />
        <Setter Property="BorderWidth" Value="0" />
    </Style>

    <Style x:Key="Style.Core.Button.RoundedLong.Critical" TargetType="Button" BasedOn="{StaticResource Style.Core.Button.RoundedLong}">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="PointerOver" >
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{StaticResource DarkRed}"/>
                            <Setter Property="TextColor" Value="{Binding Source={RelativeSource Self}, Path=Background, Converter={StaticResource BrushToBlackWhiteConverter}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{StaticResource Red}"/>
                            <Setter Property="TextColor" Value="{Binding Source={RelativeSource Self}, Path=Background, Converter={StaticResource BrushToBlackWhiteConverter}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource DarkGray}}" />
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource DarkGray}, Dark={StaticResource LightGray}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <!--
                    <VisualState x:Name="Focused" />
                    <VisualState x:Name="Selected" />
                    -->
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="Style.Core.Button.Setup" TargetType="Button" BasedOn="{StaticResource Style.Core.Button.RoundedLong}">
        <Setter Property="Background" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}"/>
        <Setter Property="TextColor" Value="{DynamicResource PrimaryColor}"/>
    </Style>

    <Style x:Key="Style.Core.Button.Error" TargetType="Button" BasedOn="{StaticResource Style.Core.Button.RoundedLong}">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="PointerOver" >
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{AppThemeBinding Light={StaticResource Gray100}, Dark={StaticResource Gray900}}"/>
                            <Setter Property="TextColor" Value="{Binding Source={RelativeSource Self}, Path=Background, Converter={StaticResource BrushToBlackWhiteConverter}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{AppThemeBinding Light={StaticResource Light_OnError}, Dark={StaticResource Dark_OnError}}"/>
                            <Setter Property="TextColor" Value="{Binding Source={RelativeSource Self}, Path=Background, Converter={StaticResource BrushToBlackWhiteConverter}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Background" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource DarkGray}}" />
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource DarkGray}, Dark={StaticResource LightGray}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <!--
                    <VisualState x:Name="Focused" />
                    <VisualState x:Name="Selected" />
                    -->
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="Style.Core.Button.IconRound.EmergencyStop" TargetType="Button" BasedOn="{StaticResource Style.Core.Button.Icon.MaterialDesign}">
        <Setter Property="Background" Value="{StaticResource Red}" />
        <Setter Property="BorderColor" Value="{StaticResource Yellow}" />
        <Setter Property="TextColor" Value="{StaticResource White}" />
        <Setter Property="Text" Value="{x:Static icons:MaterialIcons.HandFrontRight}" />
        <Setter Property="BorderWidth" Value="3" />
        <Setter Property="HeightRequest" Value="{OnIdiom Tablet=70, Phone=50, Default=50}" />
        <Setter Property="WidthRequest" Value="{OnIdiom Tablet=70, Phone=50, Default=50}" />
        <Setter Property="CornerRadius" Value="{OnIdiom Tablet=35, Phone=25, Default=25}" />
    </Style>

    <Style x:Key="Style.Core.Button.LoginGoogle" TargetType="Button" BasedOn="{StaticResource Style.Core.Button.RoundedLong}">
        <Setter Property="Background" Value="{StaticResource White}" />
        <Setter Property="ImageSource">
            <FontImageSource
                FontFamily="{StaticResource MaterialDesignIcons}"
                Glyph="{x:Static icons:MaterialIcons.Google}"
                Color="{DynamicResource PrimaryColor}"
                Size="{StaticResource DefaultIconSize}"
                />
        </Setter>
    </Style>
</ResourceDictionary>