<?xml version="1.0" encoding="utf-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    
    xmlns:icons="clr-namespace:AndreasReitberger.Shared.FontIcons"
    >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Resources/Themes/SharedColors.xaml" />
        <!--<ResourceDictionary Source="/Themes/SharedIcons.xaml" />-->
        <ResourceDictionary Source="/Resources/Themes/SharedFonts.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Style x:Key="BaseStyle" TargetType="Element">
        <Setter Property="Shell.BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
        <Setter Property="Shell.ForegroundColor" Value="{AppThemeBinding Light={DynamicResource PrimaryColor}, Dark={StaticResource White}}" />
        <Setter Property="Shell.TitleColor" Value="{AppThemeBinding Light={DynamicResource PrimaryColor}, Dark={StaticResource White}}" />
        <Setter Property="Shell.DisabledColor" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource DarkGray}}" />
        <Setter Property="Shell.UnselectedColor" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource DarkGray}}" />
        <Setter Property="Shell.NavBarHasShadow" Value="False" />
        <Setter Property="Shell.TabBarBackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
        <Setter Property="Shell.TabBarForegroundColor" Value="{AppThemeBinding Light={DynamicResource PrimaryColor}, Dark={StaticResource White}}" />
        <Setter Property="Shell.TabBarTitleColor" Value="{AppThemeBinding Light={DynamicResource PrimaryColor}, Dark={StaticResource White}}" />
        <Setter Property="Shell.TabBarUnselectedColor" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource DarkGray}}" />
    </Style>
    
    <Style BasedOn="{StaticResource BaseStyle}" TargetType="ShellItem" ApplyToDerivedTypes="True" />

    <Style x:Key="DefaultShellStyle" TargetType="Shell">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Gray950}}"/>
        <Setter Property="ForegroundColor" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="TitleColor" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="UnselectedColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray100}}"/>
        <Setter Property="DisabledColor" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray600}}"/>
        <Setter Property="FlyoutBackgroundColor" Value="{AppThemeBinding Light={OnPlatform WinUI={StaticResource Gray100}, Default={StaticResource White}}, Dark={OnPlatform WinUI={StaticResource Gray900}, Default={StaticResource Black}}}"/>
        <Setter Property="TabBarBackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
        <Setter Property="TabBarForegroundColor" Value="{AppThemeBinding Light={DynamicResource PrimaryColor}, Dark={StaticResource White}}" />
        <Setter Property="TabBarTitleColor" Value="{AppThemeBinding Light={DynamicResource PrimaryColor}, Dark={StaticResource White}}" />
    </Style>

    <Style x:Key="DefaultFlyoutItemStyle" TargetType="FlyoutItem">
        <Style.Triggers>
            <Trigger TargetType="FlyoutItem" Property="IsEnabled" Value="False">
                <Setter Property="Icon">
                    <Setter.Value>
                        <!-- Size="{StaticResource DefaultIconSize}" -->
                        <FontImageSource
                            FontFamily="{StaticResource MaterialDesignIcons}"
                            Glyph="{x:Static icons:MaterialIcons.LockOutline}"                           
                            Color="{AppThemeBinding Light={StaticResource Gray800}, Dark={StaticResource Gray200}}"
                            Size="{StaticResource DefaultIconSize}"
                            />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Apply default style defaultly-->
    <Style TargetType="FlyoutItem" BasedOn="{StaticResource DefaultFlyoutItemStyle}"/>

</ResourceDictionary>