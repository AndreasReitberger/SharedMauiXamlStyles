<?xml version="1.0" encoding="utf-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Themes/SharedColors.xaml" />
        <ResourceDictionary Source="/Themes/SharedIcons.xaml" />
        <ResourceDictionary Source="/Themes/SharedFonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DefaultButtonStyle" TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource MontserratSemiBold}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource PrimaryColor}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource PrimaryColor}, Dark={StaticResource White}}" />
        <Setter Property="FontSize" Value="{OnIdiom Tablet=20, Default=16}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={DynamicResource PrimaryColor}}" />
                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={DynamicResource PrimaryColor}, Dark={StaticResource White}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource DarkGray}, Dark={StaticResource LightGray}}" />
                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource DarkGray}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}"/>

    <Style TargetType="ImageButton">
        <Setter Property="BorderColor" Value="Transparent"/>
        <Setter Property="BorderWidth" Value="0"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="1" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.5" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    
    <Style x:Key="IconButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray400}}" />
        <Setter Property="BackgroundColor" Value="{StaticResource Transparent}" />
        <Setter Property="FontFamily" Value="{StaticResource FontIcons}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultTextIconSize}" />
        <Setter Property="HeightRequest" Value="{OnIdiom Desktop=60, Tablet=60, Default=50}" />
        <Setter Property="WidthRequest" Value="{OnIdiom Desktop=60, Tablet=60, Default=50}" />
        <Setter Property="BorderWidth" Value="0" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray400}}" />
                            <Setter Property="BackgroundColor" Value="{StaticResource Transparent}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource DarkGray}, Dark={StaticResource LightGray}}" />
                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource DarkGray}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="MaterialDesignIconButtonStyle" TargetType="Button" BasedOn="{StaticResource IconButtonStyle}">
        <Setter Property="FontFamily" Value="{StaticResource MaterialDesignIcons}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultTextIconSize}" />
    </Style>

    <Style x:Key="LinkButton" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="TextColor" Value="{DynamicResource HyperLink}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
    </Style>

    <Style x:Key="RoundIconButtonStyle" BasedOn="{StaticResource IconButtonStyle}" TargetType="Button">
        <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray700}}" />
        <Setter Property="BorderWidth" Value="1" />
        <Setter Property="CornerRadius" Value="22" />
        <Setter Property="WidthRequest" Value="44" />
        <Setter Property="HeightRequest" Value="44" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray800}, Dark={StaticResource Gray200}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray100}, Dark={StaticResource Gray900}}" />
    </Style>

    <Style x:Key="RoundedLongButtonStyle" TargetType="Button">
        <Setter Property="Margin" Value="20" />
        <Setter Property="TextColor" Value="{DynamicResource White}" />
        <Setter Property="FontFamily" Value="{StaticResource MontserratSemiBold}" />
        <Setter Property="FontSize" Value="{OnIdiom Desktop=18, Tablet=18, Phone=14, Default=14}" />
        <Setter Property="FontAttributes" Value="Bold" />
        <Setter Property="HeightRequest" Value="{OnIdiom Desktop=60, Tablet=60, Phone=45, Default=45}" />
        <Setter Property="CornerRadius" Value="{OnIdiom Desktop=30, Tablet=30, Phone=20, Default=20}" />
        <Setter Property="WidthRequest" Value="{OnIdiom Desktop=300, Tablet=300, Phone=250, Default=250}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="BorderWidth" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False" TargetType="Button">
                <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray800}}" />
                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray800}, Dark={StaticResource Gray200}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True" TargetType="Button">
                <Setter Property="TextColor" Value="{DynamicResource White}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SetupButtonStyle" TargetType="Button" BasedOn="{StaticResource RoundedLongButtonStyle}">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}"/>
        <Setter Property="TextColor" Value="{DynamicResource PrimaryColor}"/>
    </Style>

    <!--  Common style for swipe template content border control  -->
    <!-- Delete later due to wrong style naming -->
    <Style x:Key="SwipeTemplateBorderStyle" TargetType="Button">
        <Setter Property="HeightRequest" Value="32" />
        <Setter Property="WidthRequest" Value="32" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
        <Setter Property="BorderWidth" Value="0" />
        <Setter Property="CornerRadius" Value="16" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
    </Style>
    
    <Style x:Key="SwipeTemplateButtonStyle" TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource FontIcons}" />
        <Setter Property="HeightRequest" Value="32" />
        <Setter Property="WidthRequest" Value="32" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
        <Setter Property="BorderWidth" Value="0" />
        <Setter Property="CornerRadius" Value="16" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
    </Style>

    <Style x:Key="RoundMaterialDesignIconButtonStyle" TargetType="Button">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray600}, Dark={StaticResource Gray400}}" />
        <Setter Property="BackgroundColor" Value="{StaticResource Transparent}" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialDesignIcons}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultIconSize}" />
        <Setter Property="HeightRequest" Value="{OnIdiom Desktop=70, Tablet=70, Default=50}" />
        <Setter Property="WidthRequest" Value="{OnIdiom Desktop=70, Tablet=70, Default=50}" />
        <Setter Property="CornerRadius" Value="{OnIdiom Desktop=35, Tablet=35, Default=25}" />
    </Style>

    <Style x:Key="RoundEmergencyStopIconButtonStyle" TargetType="Button" BasedOn="{StaticResource RoundMaterialDesignIconButtonStyle}">
        <Setter Property="Text" Value="{StaticResource MaterialDesign_HandRight}" />
        <Setter Property="TextColor" Value="{DynamicResource White}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource Red}" />
        <Setter Property="BorderColor" Value="{DynamicResource Yellow}" />
        <Setter Property="BorderWidth" Value="3" />
        <Setter Property="HeightRequest" Value="{OnIdiom Tablet=70, Phone=50, Default=50}" />
        <Setter Property="WidthRequest" Value="{OnIdiom Tablet=70, Phone=50, Default=50}" />
        <Setter Property="CornerRadius" Value="{OnIdiom Tablet=35, Phone=25, Default=25}" />
    </Style>

</ResourceDictionary>